
#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –¥–ª—è –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ CVR –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ CVR –∑–Ω–∞—á–µ–Ω–∏—è–º
"""

import sys
import asyncio
sys.path.append('.')

from cvr_autoanalyzer import CVRAutoAnalyzer, analyze_and_recommend_async
from db import get_profile, save_profile

async def test_new_cvr_logic():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ CVR –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ CVR –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞...")
    
    analyzer = CVRAutoAnalyzer()
    print("‚úÖ CVRAutoAnalyzer –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:")
    
    # 1. –¢–µ—Å—Ç –ø—É—Å—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
    empty_profile = {}
    empty_check = analyzer._check_profile_completeness(empty_profile)
    print(f"  ‚Ä¢ –ü—É—Å—Ç–æ–π –ø—Ä–æ—Ñ–∏–ª—å: {not empty_check} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å False)")
    
    # 2. –¢–µ—Å—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è (3 –ø–æ–ª—è)
    minimal_profile = {
        'role': 'Python Developer',
        'level': 'Senior', 
        'current_location': 'Moscow'
    }
    minimal_check = analyzer._check_profile_completeness(minimal_profile)
    print(f"  ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å (3 –ø–æ–ª—è): {minimal_check} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å True)")
    
    # 3. –¢–µ—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è —Å 2 –ø–æ–ª—è–º–∏
    insufficient_profile = {
        'role': 'Developer',
        'level': 'Junior'
    }
    insufficient_check = analyzer._check_profile_completeness(insufficient_profile)
    print(f"  ‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å (2 –ø–æ–ª—è): {not insufficient_check} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å False)")
    
    # 4. –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
    full_profile = {
        'role': 'Senior Python Developer',
        'level': 'Senior',
        'current_location': 'Moscow',
        'target_location': 'Berlin',
        'deadline_weeks': 12,
        'role_synonyms_json': '["Python Developer", "Backend Developer"]',
        'salary_min': 80000,
        'company_types_json': '["Startup", "Scale-up"]'
    }
    full_check = analyzer._check_profile_completeness(full_profile)
    print(f"  ‚Ä¢ –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å: {full_check} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å True)")
    
    print("\nüéØ –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:")
    print("  ‚Ä¢ ‚úÖ –£–±—Ä–∞–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ CVR < 20%")
    print("  ‚Ä¢ ‚úÖ –£–±—Ä–∞–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å ‚â• 5")
    print("  ‚Ä¢ ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è (3 –ø–æ–ª—è)")
    print("  ‚Ä¢ ‚úÖ –ê–Ω–∞–ª–∏–∑ —Å–æ–∑–¥–∞–µ—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö CVR –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏–π")
    print("  ‚Ä¢ ‚úÖ –ì–∏–ø–æ—Ç–µ–∑—ã –ø–æ–¥–±–∏—Ä–∞—é—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö CVR –º–µ—Ç—Ä–∏–∫")
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –∞–Ω–∞–ª–∏–∑–∞:")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º, —á—Ç–æ –∞–Ω–∞–ª–∏–∑ —Å–æ–∑–¥–∞–µ—Ç—Å—è –¥–ª—è –ª—é–±—ã—Ö CVR –∑–Ω–∞—á–µ–Ω–∏–π
    test_funnel_data = {
        'applications': 50,
        'responses': 45,   # CVR1 = 90% (–≤—ã—Å–æ–∫–∏–π)
        'screenings': 40,  # CVR2 = 89% (–≤—ã—Å–æ–∫–∏–π)
        'onsites': 35,     # CVR3 = 88% (–≤—ã—Å–æ–∫–∏–π)
        'offers': 30,      # CVR4 = 86% (–≤—ã—Å–æ–∫–∏–π)
        'rejections': 5,
        'funnel_type': 'active',
        'week_start': '2025-08-16'
    }
    
    from metrics import calculate_cvr_metrics
    test_metrics = calculate_cvr_metrics(test_funnel_data, 'active')
    cvr_numeric = analyzer._extract_cvr_numbers(test_metrics)
    
    print(f"  ‚Ä¢ –í—ã—Å–æ–∫–∏–µ CVR: CVR1={cvr_numeric.get('cvr1', 0)}%, CVR2={cvr_numeric.get('cvr2', 0)}%")
    print(f"  ‚Ä¢ CVR3={cvr_numeric.get('cvr3', 0)}%, CVR4={cvr_numeric.get('cvr4', 0)}%")
    print("  ‚Ä¢ –ê–Ω–∞–ª–∏–∑ –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤—ã—Å–æ–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∏–∑–∫–∏–µ CVR
    low_cvr_data = {
        'applications': 100,
        'responses': 2,    # CVR1 = 2% (–Ω–∏–∑–∫–∏–π)
        'screenings': 1,   # CVR2 = 50% (—Å—Ä–µ–¥–Ω–∏–π)
        'onsites': 1,      # CVR3 = 100% (–≤—ã—Å–æ–∫–∏–π)
        'offers': 0,       # CVR4 = 0% (–Ω–∏–∑–∫–∏–π)
        'rejections': 10,
        'funnel_type': 'active',
        'week_start': '2025-08-16'
    }
    
    low_metrics = calculate_cvr_metrics(low_cvr_data, 'active')
    low_cvr_numeric = analyzer._extract_cvr_numbers(low_metrics)
    
    print(f"  ‚Ä¢ –ù–∏–∑–∫–∏–µ CVR: CVR1={low_cvr_numeric.get('cvr1', 0)}%, CVR4={low_cvr_numeric.get('cvr4', 0)}%")
    print("  ‚Ä¢ –ê–Ω–∞–ª–∏–∑ –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –Ω–∏–∑–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π")
    
    print("\n‚úÖ –†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã:")
    print("  ‚Ä¢ –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("  ‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ CVR –∑–Ω–∞—á–µ–Ω–∏—è–º —É–¥–∞–ª–µ–Ω—ã")
    print("  ‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Å–æ–∑–¥–∞–µ—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")
    print("  ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É")

if __name__ == "__main__":
    asyncio.run(test_new_cvr_logic())
