PRD v2 — Telegram-бот «Job Funnel Tracker» (Итерация 2: Профиль кандидата)
Описание проекта
Добавляем в бота мастер-профиля кандидата. Бот по шагам просит ввести обязательные и опциональные поля, валидирует, сохраняет в SQLite и показывает профиль только владельцу (по Telegram user_id). Профиль используется как контекст для воронок и будущих гипотез.
________________________________________
Функционал
•	Мастер заполнения профиля (/profile_setup):
o	Обязательные поля:
Роль · Текущая локация · Локация поиска · Уровень (Junior/Middle/Senior/Lead/Своё) · Срок (целое число недель).
o	Необязательные поля (можно пропускать):
Синонимы ролей (≤4) · Диапазон ЗП (min–max + валюта + период) · Типы компаний (мультивыбор) · Индустрии (≤3) · Ключевые компетенции (≤10) · Карта суперсил (3–5) · Доп. ограничения.
•	Просмотр профиля (/profile): аккуратная таблица в чате (моноширинная разметка).
•	Точечное редактирование (/profile_edit): выбор поля → ввод нового значения → валидация → сохранение.
•	Удаление профиля (/profile_delete): подтверждение «Да/Нет».
•	Конфиденциальность: бот не рассылает профиль никому; выборка строго по user_id.
•	Интеграция с итерацией 1: профиль не меняет расчёты воронки, но доступен для будущих гипотез/сегментации.
________________________________________
Правила ввода и валидации
•	Уровень: кнопки Junior/Middle/Senior/Lead/Своё. При «Своё» — свободный ввод строки.
•	Срок: целое 1–52 (недель). Храним deadline_weeks и вычисляем target_end_date (понедельник текущей недели + N недель).
•	Синонимы ролей: до 4, уникальные, через запятую.
•	ЗП: формат мин–макс валюта период (напр. 3000–5000 EUR / month). Парсим мин≤макс; валюта — ISO-4217 или символ; период month|year.
•	Типы компаний: мультивыбор из подсказок SMB / Scale-up / Enterprise / Consulting + «Своё».
•	Индустрии: до 3 уникальных тегов.
•	Компетенции: до 10 коротких тегов.
•	Карта суперсил: 3–5 буллетов по шаблону «что делал → бизнес-эффект (сэкономил/заработал/ускорил)».
•	Доп. ограничения: свободный текст (до 500 символов).
•	В любом месте есть кнопка «Пропустить» (для необязательных полей) и «Назад».
________________________________________
Технические требования
•	Технологии: Python 3, aiogram, aiosqlite, Pydantic (валидация).
•	Хранение: SQLite, одна запись профиля на user_id. Списки — JSON-массивы в текстовых колонках.
•	Конфиденциальность: доступ только в приватном чате; опционально шифровать ЗП (Fernet) — ключ в ENV.
•	Платформа: Replit (Always On/аптайм-пинг).
•	UI: inline-кнопки, монотаблицы.
________________________________________
Структура
/project
  ├── main.py
  ├── db.py
  ├── profile.py        # FSM мастера профиля, хендлеры просмотра/редактирования
  ├── validators.py     # pydantic-модели и парсеры (ЗП, списки, суперсилы)
  ├── keyboards.py      # inline-клавиатуры (уровень, мультивыбор)
  ├── config.py
  ├── requirements.txt
  └── README.md
________________________________________
Схема БД (SQLite)
CREATE TABLE IF NOT EXISTS profiles (
  user_id INTEGER PRIMARY KEY,
  role TEXT NOT NULL,
  current_location TEXT NOT NULL,
  target_location TEXT NOT NULL,
  level TEXT NOT NULL,                -- сохраняем выбранную строку (включая "Своё")
  deadline_weeks INTEGER NOT NULL,    -- срок в неделях
  target_end_date TEXT NOT NULL,      -- YYYY-MM-DD (понедельник + N недель)

  role_synonyms_json   TEXT,          -- JSON array (≤4)
  salary_min REAL,                    -- опционально шифруем и храним как TEXT
  salary_max REAL,
  salary_currency TEXT,               -- ISO-4217 или символ
  salary_period TEXT,                 -- 'month' | 'year'
  company_types_json    TEXT,         -- JSON array
  industries_json       TEXT,         -- JSON array (≤3)
  competencies_json     TEXT,         -- JSON array (≤10)
  superpowers_json      TEXT,         -- JSON array (3–5)
  constraints_text      TEXT,         -- до 500 символов

  created_at TEXT NOT NULL DEFAULT (datetime('now')),
  updated_at TEXT NOT NULL DEFAULT (datetime('now'))
);

CREATE TRIGGER IF NOT EXISTS profiles_updated
AFTER UPDATE ON profiles
BEGIN
  UPDATE profiles SET updated_at = datetime('now') WHERE user_id = NEW.user_id;
END;
Если включаем шифрование ЗП, столбцы salary_min/salary_max храним как TEXT (cipher), парсим/дешифруем на лету.
________________________________________
UX-флоу (FSM)
•	/profile_setup → приветствие + правила конфиденциальности →
1.	Роль → 2) Текущая локация → 3) Локация поиска → 4) Уровень (кнопки) → 5) Срок (недели) →
2.	Синонимы ролей (опц.) → 7) Диапазон ЗП (опц.) → 8) Типы компаний (мультивыбор) →
3.	Индустрии (до 3) → 10) Компетенции (до 10) → 11) Суперсилы (3–5) → 12) Доп. ограничения (опц.) →
Итоговый экран: сводная таблица + кнопки: «Сохранить», «Исправить поле», «Отмена».
•	/profile — показать текущий профиль (или предложить пройти мастер).
•	/profile_edit — меню полей → выбранное поле → валидация → сохранить → показать обновлённый профиль.
•	/profile_delete — подтверждение → удаление записи.
________________________________________
Нефункциональные требования
•	Время ответа шага: ≤1.5 сек.
•	Валидируем и дружелюбно объясняем ошибку (пример формата).
•	Логи: только служебные, без персональных данных.
•	Rate limit: не более 5 изменений профиля/мин на пользователя.
________________________________________
Критерии приёмки
•	Мастер требует все обязательные поля; опциональные можно пропускать.
•	Профиль сохраняется и доступен только владельцу; просмотр/редактирование работают.
•	Валидация ограничений (≤4/≤3/≤10/3–5) соблюдается.
•	ЗП корректно парсится (мин≤макс, валюта, период).
•	target_end_date рассчитывается от понедельника текущей недели + N недель.
•	Табличный вывод читаем и выровнен.
•	Удаление профиля полностью очищает запись.
________________________________________
Начни с базовой версии (MVP)
