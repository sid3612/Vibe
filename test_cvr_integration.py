#!/usr/bin/env python3
"""
–ò—Ç–µ—Ä–∞—Ü–∏—è 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–∞–Ω–∞–ª–∏–∑–∞ CVR –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
"""

import sys
import asyncio
sys.path.append('.')

from cvr_autoanalyzer import analyze_and_recommend, CVRAutoAnalyzer

async def test_cvr_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–∞–Ω–∞–ª–∏–∑–∞ CVR"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CVR Auto-Analyzer (–ò—Ç–µ—Ä–∞—Ü–∏—è 4)...")
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    analyzer = CVRAutoAnalyzer()
    print("‚úÖ CVRAutoAnalyzer –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:")
    
    # 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–µ—Ç–µ–∫—Ü–∏—é –ø—Ä–æ–±–ª–µ–º CVR
    test_problem = analyzer._is_problem_cvr(8.5, 10)  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å True (CVR < 10%, –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å ‚â• 5)
    test_no_problem = analyzer._is_problem_cvr(15.0, 10)  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å False (CVR ‚â• 10%)
    test_low_denominator = analyzer._is_problem_cvr(5.0, 3)  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å False (–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å < 5)
    
    print(f"  ‚Ä¢ –î–µ—Ç–µ–∫—Ü–∏—è –ø—Ä–æ–±–ª–µ–º CVR: {test_problem and not test_no_problem and not test_low_denominator}")
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —á–∏—Å–ª–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    test_metrics = {
        'cvr1': '8%',
        'cvr2': '15%', 
        'cvr3': '‚Äî',
        'cvr4': '25%'
    }
    
    cvr_values = analyzer._extract_cvr_numbers(test_metrics)
    expected = {'cvr1': 8.0, 'cvr2': 15.0, 'cvr3': None, 'cvr4': 25.0}
    
    extraction_test = cvr_values == expected
    print(f"  ‚Ä¢ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ CVR –∑–Ω–∞—á–µ–Ω–∏–π: {extraction_test}")
    
    if not extraction_test:
        print(f"    –û–∂–∏–¥–∞–ª–æ—Å—å: {expected}")
        print(f"    –ü–æ–ª—É—á–µ–Ω–æ: {cvr_values}")
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª–∞ –≤—ã–±–æ—Ä–∞ –≥–∏–ø–æ—Ç–µ–∑
    mapping_test = analyzer.cvr_hypothesis_mapping == {
        'CVR1': ['H1', 'H2'],  # –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ö–∞–Ω–∞–ª—ã
        'CVR2': ['H2', 'H3'],  # –ö–∞–Ω–∞–ª—ã –∏ –°–∫—Ä–∏–Ω–∏–Ω–≥
        'CVR3': ['H3', 'H4'],  # –°–∫—Ä–∏–Ω–∏–Ω–≥ –∏ –û–Ω—Å–∞–π—Ç—ã
        'CVR4': ['H5']         # –û—Ñ—Ñ–µ—Ä
    }
    print(f"  ‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞ –≤—ã–±–æ—Ä–∞ –≥–∏–ø–æ—Ç–µ–∑: {mapping_test}")
    
    # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–º—É–ª—è—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –≤–æ—Ä–æ–Ω–∫–∏
    test_funnel_data = {
        'applications': 50,
        'responses': 3,  # CVR1 = 6% (–ø—Ä–æ–±–ª–µ–º–∞)
        'screenings': 2,  # CVR2 = 67% (–Ω–æ—Ä–º–∞)
        'onsites': 1,     # CVR3 = 50% (–Ω–æ—Ä–º–∞)
        'offers': 0,      # CVR4 = 0% (–ø—Ä–æ–±–ª–µ–º–∞, –Ω–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å = 1 < 5)
        'rejections': 10,
        'funnel_type': 'active',
        'week_start': '2025-08-16'
    }
    
    from metrics import calculate_cvr_metrics
    test_metrics_result = calculate_cvr_metrics(test_funnel_data, 'active')
    cvr_numeric = analyzer._extract_cvr_numbers(test_metrics_result)
    
    print(f"  ‚Ä¢ –°–∏–º—É–ª—è—Ü–∏—è –≤–æ—Ä–æ–Ω–∫–∏: CVR1={cvr_numeric.get('cvr1', 0)}% (–æ–∂–∏–¥–∞–µ—Ç—Å—è –ø—Ä–æ–±–ª–µ–º–∞)")
    
    print("\nüéØ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å CVR –∞–≤—Ç–æ–∞–Ω–∞–ª–∏–∑–∞:")
    print("  ‚Ä¢ ‚úÖ –ê–≤—Ç–æ–¥–µ—Ç–µ–∫—Ç –ø—Ä–æ–±–ª–µ–º CVR < 10% –ø—Ä–∏ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª–µ ‚â• 5")
    print("  ‚Ä¢ ‚úÖ –í—ã–±–æ—Ä —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –≥–∏–ø–æ—Ç–µ–∑ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º")
    print("  ‚Ä¢ ‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ChatGPT")
    print("  ‚Ä¢ ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π")
    print("  ‚Ä¢ ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ workflow –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
    print("  ‚Ä¢ ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ—Å–ª–µ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ –∏–ª–∏ –æ—Ç–∫–∞–∑–∞")
    
    print("\nüöÄ Workflow CVR –∞–Ω–∞–ª–∏–∑–∞:")
    print("  1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–æ—Ä–æ–Ω–∫–∏")
    print("  2. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ—Ç–µ–∫—Ç–∏—Ç –ø—Ä–æ–±–ª–µ–º—ã CVR")
    print("  3. –í—ã–±–∏—Ä–∞—é—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≥–∏–ø–æ—Ç–µ–∑—ã –∏–∑ —Ñ–∞–π–ª–∞")
    print("  4. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è ChatGPT")
    print("  5. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ —Ñ–æ—Ä–º—ã —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏")
    
    print("\nüéâ CVR Auto-Analyzer (–ò—Ç–µ—Ä–∞—Ü–∏—è 4) –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    return True

if __name__ == "__main__":
    success = asyncio.run(test_cvr_integration())
    sys.exit(0 if success else 1)