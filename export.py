import csv
import io
from typing import List, Dict, Any
from db import get_user_history, get_user_funnels
from metrics import calculate_cvr_metrics

def generate_csv_export(user_id: int) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å CSV —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    history_data = get_user_history(user_id)
    user_data = get_user_funnels(user_id)
    
    if not history_data:
        return ""
    
    # –°–æ–∑–¥–∞–µ–º CSV –≤ –ø–∞–º—è—Ç–∏
    output = io.StringIO()
    
    funnel_type = user_data.get('active_funnel', 'active')
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –≤–æ—Ä–æ–Ω–∫–∏
    if funnel_type == 'active':
        fieldnames = [
            'week_start', 'channel_name', 'funnel_type',
            'applications', 'responses', 'screenings', 'onsites', 'offers', 'rejections',
            'cvr1', 'cvr2', 'cvr3', 'cvr4',
            'created_at', 'updated_at'
        ]
        
        field_translations = {
            'week_start': '–ù–µ–¥–µ–ª—è',
            'channel_name': '–ö–∞–Ω–∞–ª',
            'funnel_type': '–¢–∏–ø –≤–æ—Ä–æ–Ω–∫–∏',
            'applications': '–ü–æ–¥–∞—á–∏',
            'responses': '–û—Ç–≤–µ—Ç—ã',
            'screenings': '–°–∫—Ä–∏–Ω–∏–Ω–≥–∏',
            'onsites': '–û–Ω—Å–∞–π—Ç—ã',
            'offers': '–û—Ñ—Ñ–µ—Ä—ã',
            'rejections': '–†–µ–¥–∂–µ–∫—Ç—ã',
            'cvr1': 'CVR1 (%)',
            'cvr2': 'CVR2 (%)',
            'cvr3': 'CVR3 (%)',
            'cvr4': 'CVR4 (%)',
            'created_at': '–°–æ–∑–¥–∞–Ω–æ',
            'updated_at': '–û–±–Ω–æ–≤–ª–µ–Ω–æ'
        }
    else:  # passive
        fieldnames = [
            'week_start', 'channel_name', 'funnel_type',
            'views', 'incoming', 'screenings', 'onsites', 'offers', 'rejections',
            'cvr1', 'cvr2', 'cvr3', 'cvr4',
            'created_at', 'updated_at'
        ]
        
        field_translations = {
            'week_start': '–ù–µ–¥–µ–ª—è',
            'channel_name': '–ö–∞–Ω–∞–ª',
            'funnel_type': '–¢–∏–ø –≤–æ—Ä–æ–Ω–∫–∏',
            'views': '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã',
            'incoming': '–í—Ö–æ–¥—è—â–∏–µ',
            'screenings': '–°–∫—Ä–∏–Ω–∏–Ω–≥–∏',
            'onsites': '–û–Ω—Å–∞–π—Ç—ã',
            'offers': '–û—Ñ—Ñ–µ—Ä—ã',
            'rejections': '–†–µ–¥–∂–µ–∫—Ç—ã',
            'cvr1': 'CVR1-passive (%)',
            'cvr2': 'CVR2-passive (%)',
            'cvr3': 'CVR3-passive (%)',
            'cvr4': 'CVR4-passive (%)',
            'created_at': '–°–æ–∑–¥–∞–Ω–æ',
            'updated_at': '–û–±–Ω–æ–≤–ª–µ–Ω–æ'
        }
    
    # –°–æ–∑–¥–∞–µ–º CSV writer —Å UTF-8 BOM –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Excel
    writer = csv.DictWriter(output, fieldnames=fieldnames, delimiter=';')
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º
    translated_headers = {field: field_translations.get(field, field) for field in fieldnames}
    writer.writerow(translated_headers)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    for row in history_data:
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏
        metrics = calculate_cvr_metrics(row, funnel_type)
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏
        csv_row = {}
        for field in fieldnames:
            if field in ['cvr1', 'cvr2', 'cvr3', 'cvr4']:
                csv_row[field] = metrics.get(field, '‚Äî')
            elif field == 'funnel_type':
                csv_row[field] = '–ê–∫—Ç–∏–≤–Ω–∞—è' if row[field] == 'active' else '–ü–∞—Å—Å–∏–≤–Ω–∞—è'
            else:
                csv_row[field] = row.get(field, '')
        
        writer.writerow(csv_row)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ CSV —Å UTF-8 BOM
    csv_content = output.getvalue()
    output.close()
    
    # –î–æ–±–∞–≤–ª—è–µ–º UTF-8 BOM –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Excel
    return '\ufeff' + csv_content

def generate_summary_report(user_id: int, weeks: int = 4) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ N –Ω–µ–¥–µ–ª—å"""
    from metrics import get_summary_metrics
    
    summary = get_summary_metrics(user_id, weeks)
    if not summary:
        return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞"
    
    output = io.StringIO()
    
    funnel_type = summary['funnel_type']
    totals = summary['totals']
    metrics = summary['metrics']
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á–µ—Ç–∞
    output.write(f"–°–í–û–î–ù–´–ô –û–¢–ß–ï–¢ –ó–ê {weeks} –ù–ï–î–ï–õ–¨\n")
    output.write(f"–¢–∏–ø –≤–æ—Ä–æ–Ω–∫–∏: {'–ê–∫—Ç–∏–≤–Ω–∞—è' if funnel_type == 'active' else '–ü–∞—Å—Å–∏–≤–Ω–∞—è'}\n")
    output.write("=" * 50 + "\n\n")
    
    if funnel_type == 'active':
        output.write("–û–ë–©–ò–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:\n")
        output.write(f"–ü–æ–¥–∞—á–∏: {totals['applications']}\n")
        output.write(f"–û—Ç–≤–µ—Ç—ã: {totals['responses']}\n")
        output.write(f"–°–∫—Ä–∏–Ω–∏–Ω–≥–∏: {totals['screenings']}\n")
        output.write(f"–û–Ω—Å–∞–π—Ç—ã: {totals['onsites']}\n")
        output.write(f"–û—Ñ—Ñ–µ—Ä—ã: {totals['offers']}\n")
        output.write(f"–†–µ–¥–∂–µ–∫—Ç—ã: {totals['rejections']}\n")
        
        output.write("\nMETRIKI –ö–û–ù–í–ï–†–°–ò–ò:\n")
        output.write(f"CVR1 (–û—Ç–≤–µ—Ç—ã/–ü–æ–¥–∞—á–∏): {metrics['cvr1']}\n")
        output.write(f"CVR2 (–°–∫—Ä–∏–Ω–∏–Ω–≥–∏/–û—Ç–≤–µ—Ç—ã): {metrics['cvr2']}\n")
        output.write(f"CVR3 (–û–Ω—Å–∞–π—Ç—ã/–°–∫—Ä–∏–Ω–∏–Ω–≥–∏): {metrics['cvr3']}\n")
        output.write(f"CVR4 (–û—Ñ—Ñ–µ—Ä—ã/–û–Ω—Å–∞–π—Ç—ã): {metrics['cvr4']}\n")
        
    else:  # passive
        output.write("–û–ë–©–ò–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:\n")
        output.write(f"–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {totals['views']}\n")
        output.write(f"–í—Ö–æ–¥—è—â–∏–µ: {totals['incoming']}\n")
        output.write(f"–°–∫—Ä–∏–Ω–∏–Ω–≥–∏: {totals['screenings']}\n")
        output.write(f"–û–Ω—Å–∞–π—Ç—ã: {totals['onsites']}\n")
        output.write(f"–û—Ñ—Ñ–µ—Ä—ã: {totals['offers']}\n")
        output.write(f"–†–µ–¥–∂–µ–∫—Ç—ã: {totals['rejections']}\n")
        
        output.write("\nMETRIKI –ö–û–ù–í–ï–†–°–ò–ò:\n")
        output.write(f"CVR1-passive (–í—Ö–æ–¥—è—â–∏–µ/–ü—Ä–æ—Å–º–æ—Ç—Ä—ã): {metrics['cvr1']}\n")
        output.write(f"CVR2-passive (–°–∫—Ä–∏–Ω–∏–Ω–≥–∏/–í—Ö–æ–¥—è—â–∏–µ): {metrics['cvr2']}\n")
        output.write(f"CVR3-passive (–û–Ω—Å–∞–π—Ç—ã/–°–∫—Ä–∏–Ω–∏–Ω–≥–∏): {metrics['cvr3']}\n")
        output.write(f"CVR4-passive (–û—Ñ—Ñ–µ—Ä—ã/–û–Ω—Å–∞–π—Ç—ã): {metrics['cvr4']}\n")
    
    # –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    output.write("\n–ê–ù–ê–õ–ò–ó:\n")
    offers = totals.get('offers', 0)
    if offers > 0:
        output.write(f"üéâ –ü–æ–ª—É—á–µ–Ω–æ –æ—Ñ—Ñ–µ—Ä–æ–≤: {offers}\n")
        output.write(f"üìä –û—Ñ—Ñ–µ—Ä—ã –∑–∞ –Ω–µ–¥–µ–ª—é –≤ —Å—Ä–µ–¥–Ω–µ–º: {offers / weeks:.1f}\n")
    else:
        output.write("üîç –û—Ñ—Ñ–µ—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å!\n")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if funnel_type == 'active':
        cvr1_num = float(metrics['cvr1'].replace('%', '')) if metrics['cvr1'] != '‚Äî' else 0
        cvr4_num = float(metrics['cvr4'].replace('%', '')) if metrics['cvr4'] != '‚Äî' else 0
        
        output.write("\n–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\n")
        if cvr1_num < 10:
            output.write("‚Ä¢ –ù–∏–∑–∫–∏–π CVR1: —É–ª—É—á—à–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–∫–ª–∏–∫–æ–≤\n")
        if cvr4_num < 30:
            output.write("‚Ä¢ –ù–∏–∑–∫–∏–π CVR4: —Ä–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –∫ –∏–Ω—Ç–µ—Ä–≤—å—é\n")
    
    content = output.getvalue()
    output.close()
    
    return content
