#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –æ—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏
"""

def check_main_py_callback_filter():
    """–ü—Ä–æ–≤–µ—Ä–∏–º —Ñ–∏–ª—å—Ç—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞"""
    print("üîç –ê–ù–ê–õ–ò–ó –§–ò–õ–¨–¢–†–ê CALLBACK –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê –í MAIN.PY")
    
    with open('main.py', 'r') as f:
        content = f.read()
    
    # –ù–∞–π–¥–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ñ–∏–ª—å—Ç—Ä–æ–º
    lines = content.split('\n')
    for i, line in enumerate(lines):
        if '@dp.callback_query' in line and '~F.data.startswith' in line:
            print(f"–°—Ç—Ä–æ–∫–∞ {i+1}: {line.strip()}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∫–∏–µ callback'–∏ –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è
            blocked_prefixes = []
            if 'reflection_v31_' in line:
                blocked_prefixes.append('reflection_v31_')
            if 'rating_' in line:
                blocked_prefixes.append('rating_')
            if 'reason_v31_' in line:
                blocked_prefixes.append('reason_v31_')
            
            print(f"–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã: {blocked_prefixes}")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–µ—Å—Ç–æ–≤—ã–µ callback'–∏
            test_callbacks = [
                "reflection_v31_yes_2",
                "reflection_v31_no", 
                "rating_3",
                "main_menu"
            ]
            
            for callback in test_callbacks:
                blocked = any(callback.startswith(prefix) for prefix in blocked_prefixes if 'reflection_v31_' not in blocked_prefixes)
                status = "BLOCKED" if blocked else "ALLOWED"
                print(f"   {callback}: {status}")
    
    return True

def check_integration_handlers():
    """–ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ integration_v31.py"""
    print("\nüìã –ê–ù–ê–õ–ò–ó –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –í INTEGRATION_V31.PY")
    
    with open('integration_v31.py', 'r') as f:
        content = f.read()
    
    # –ò—â–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    handlers_found = []
    lines = content.split('\n')
    
    for i, line in enumerate(lines):
        if '@dp.callback_query' in line:
            # –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å def
            if i + 1 < len(lines):
                def_line = lines[i + 1].strip()
                print(f"–û–±—Ä–∞–±–æ—Ç—á–∏–∫: {line.strip()}")
                print(f"   –§—É–Ω–∫—Ü–∏—è: {def_line}")
                
                # –ü—Ä–æ–≤–µ—Ä–∏–º —Ñ–∏–ª—å—Ç—Ä
                if 'reflection_v31_yes_' in line:
                    handlers_found.append('yes_handler')
                elif 'reflection_v31_no' in line:
                    handlers_found.append('no_handler')
    
    print(f"–ù–∞–π–¥–µ–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {handlers_found}")
    return len(handlers_found) >= 2

def check_main_py_handler_registration():
    """–ü—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é reflection –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ main.py"""
    print("\nüîß –ü–†–û–í–ï–†–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –í MAIN.PY")
    
    with open('main.py', 'r') as f:
        content = f.read()
    
    registration_found = False
    lines = content.split('\n')
    
    for line in lines:
        if 'register_v31_reflection_handlers' in line:
            print(f"–ù–∞–π–¥–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {line.strip()}")
            registration_found = True
    
    if not registration_found:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ –ù–ï –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ main.py!")
        return False
    
    return True

def main():
    print("üöÄ –ü–†–û–°–¢–ê–Ø –û–¢–õ–ê–î–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –ö–ù–û–ü–ö–ê–ú–ò –†–ï–§–õ–ï–ö–°–ò–ò")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∏–º —Ñ–∏–ª—å—Ç—Ä –≤ main.py
    filter_ok = check_main_py_callback_filter()
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ integration_v31.py
    handlers_ok = check_integration_handlers()
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ main.py
    registration_ok = check_main_py_handler_registration()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ê–ù–ê–õ–ò–ó–ê:")
    print(f"   üîç –§–∏–ª—å—Ç—Ä callback: {'‚úÖ OK' if filter_ok else '‚ùå –ü–†–û–ë–õ–ï–ú–ê'}")
    print(f"   üìã –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏: {'‚úÖ OK' if handlers_ok else '‚ùå –ü–†–û–ë–õ–ï–ú–ê'}")
    print(f"   üîß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {'‚úÖ OK' if registration_ok else '‚ùå –ü–†–û–ë–õ–ï–ú–ê'}")
    
    if not registration_ok:
        print("\nüéØ –ù–ê–ô–î–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê!")
        print("   –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ reflection v3.1 –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ main.py")
        print("   –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å: register_v31_reflection_handlers(dp)")
        return False
    
    if filter_ok and handlers_ok and registration_ok:
        print("\nü§î –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ")
    
    return True

if __name__ == "__main__":
    main()