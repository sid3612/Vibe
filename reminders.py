import asyncio
from datetime import datetime, time
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
import pytz

from config import REMINDER_TIMES, TIMEZONE
from db import get_users_for_reminders

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
scheduler = None

async def send_reminder(bot, user_id: int, reminder_type: str):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    if reminder_type == 'daily':
        message = """
‚è∞ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!

–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –≤–∞—à–µ–π –≤–æ—Ä–æ–Ω–∫–µ –ø–æ–∏—Å–∫–∞ —Ä–∞–±–æ—Ç—ã.

–ß—Ç–æ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ –≤–∞—à–µ–º –ø–æ–∏—Å–∫–µ?
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–æ–≤—ã–µ –æ—Ç–∫–ª–∏–∫–∏?
‚Ä¢ –ü–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç—ã –æ—Ç –∫–æ–º–ø–∞–Ω–∏–π?
‚Ä¢ –ü—Ä–æ—à–ª–∏ –∏–Ω—Ç–µ—Ä–≤—å—é?

/menu - –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
"""
    elif reminder_type == 'weekly':
        message = """
üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!

–í—Ä–µ–º—è –ø–æ–¥–≤–µ—Å—Ç–∏ –∏—Ç–æ–≥–∏ –Ω–µ–¥–µ–ª–∏ –∏ –¥–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –≤–æ—Ä–æ–Ω–∫—É.

–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º:
1. –î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø—Ä–æ—à–µ–¥—à—É—é –Ω–µ–¥–µ–ª—é
2. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ç—Ä–∏–∫–∏ CVR
3. –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ–∏—Å–∫–∞

/menu - –î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
/faq - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ä–º—É–ª—ã —Ä–∞—Å—á–µ—Ç–∞
"""
    else:
        return
    
    try:
        await bot.send_message(user_id, message)
    except Exception as e:
        print(f"Error sending reminder to user {user_id}: {e}")

async def daily_reminder_job(bot):
    """–ó–∞–¥–∞—á–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    users = get_users_for_reminders('daily')
    
    for user in users:
        await send_reminder(bot, user['user_id'], 'daily')
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
        await asyncio.sleep(0.1)

async def weekly_reminder_job(bot):
    """–ó–∞–¥–∞—á–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    users = get_users_for_reminders('weekly')
    
    for user in users:
        await send_reminder(bot, user['user_id'], 'weekly')
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
        await asyncio.sleep(0.1)

def setup_reminders(bot):
    """–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    global scheduler
    
    # –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    timezone = pytz.timezone(TIMEZONE)
    scheduler = AsyncIOScheduler(timezone=timezone)
    
    # –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ 18:00
    daily_time = REMINDER_TIMES['daily']
    scheduler.add_job(
        daily_reminder_job,
        trigger=CronTrigger(
            hour=daily_time['hour'],
            minute=daily_time['minute'],
            timezone=timezone
        ),
        args=[bot],
        id='daily_reminders',
        name='Daily Reminders'
    )
    
    # –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –≤ 10:00
    weekly_time = REMINDER_TIMES['weekly']
    scheduler.add_job(
        weekly_reminder_job,
        trigger=CronTrigger(
            day_of_week=weekly_time['day_of_week'],  # 0 = –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
            hour=weekly_time['hour'],
            minute=weekly_time['minute'],
            timezone=timezone
        ),
        args=[bot],
        id='weekly_reminders',
        name='Weekly Reminders'
    )
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler.start()
    print("Reminder scheduler started")

def shutdown_reminders():
    """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    global scheduler
    if scheduler and scheduler.running:
        scheduler.shutdown()
        print("Reminder scheduler stopped")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
async def test_reminder(bot, user_id: int, reminder_type: str):
    """–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"""
    await send_reminder(bot, user_id, reminder_type)
